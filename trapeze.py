# définir fonction
# définir A et B les bornes
# définir un nbre d'intervalle entier
# calculer la largeur des trapèzes : l= (b-a)/nbr intervalles
# début boucle de 0 à nbr de trapèzes + 1
#   calculer H trapèze
#   remplir tableau avec les hauteurs
#   faire sum aires
#   remettre aire = 0
# fin boucle
# donner val intégrale


import numpy as np
import matplotlib.pyplot as plt
from sympy.core.sympify import sympify
from utils.derivate import derivate
from sympy import Symbol,sympify
from sympy.utilities.lambdify import lambdify


def trapeze_methode(exp, a, b, m, l):

    l.acquire()
    try:
        symbole = Symbol("x")
        function = lambdify(symbole,exp)
        print("Calcul par méthode des trapèzes:")
        print("fonction = ", symbole)
        borne_a = a
        borne_b = b
        
        # bornes = X sur graphique
        print("borne a = ", borne_a)    
        print("borne b =", borne_b)
        
        #calcul de la largeur des trapèzes
        largeur = (borne_b - borne_a)/(m)
        print("largeur du trapèze = ", largeur)
        
        #calcul hauteur petite base         hauteur = Y sur graphique
        tab_hauteurs = np.arange(m+1)
        print(tab_hauteurs)
        
        tab_multi = np.arange(m)
        tab_hauteurs = function(a + (tab_multi*largeur))
        print(tab_hauteurs)
        
        integrale = (largeur/2)*(tab_hauteurs + tab_hauteurs+1)
        print("Valeur par la méthode de Trapèze : ", integrale)
        
        total = 0
        total = integrale.sum(axis = 0)
        print("La valeur totale = ", total)

        
        #calcul de l'erreur
        erreur = 0
        gd_intervalle = borne_b - borne_a
        print("Grand intervalle =", gd_intervalle)    
        
        #Calcul du maximum sur la dérivée première
        derivExp = derivate(exp,2) # Obtention de la dérivée 2nd de la fonction
        deriv = lambdify(symbole,derivExp) # Définition de la dérivée 2nd
        xl = np.linspace(a,b,100) # Intervalles sur lesquels le maximum va être déterminé
        ymax = np.amax(abs(deriv(xl))) # Maximum de la dérivée 2nd

        erreur = ((np.power(gd_intervalle,3))/(np.power(12*m,2)))*ymax
        print("L'erreur =", erreur)
        print("Maximum de la dérivée seconde =", ymax, '\n')
        
        #Nom du graphique
        plt.title("Méthode trapèze")

        #Affichage courbe
        abssisses = np.linspace(a,b,100)
        plt.plot(abssisses,function(abssisses), 'red')
        plt.grid()
        
        
        #Normalement c'est bon ici
    finally:
        l.release()
        plt.show()
